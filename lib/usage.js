// Generated by CoffeeScript 1.6.2
var clc, commandsDesc, commandsUsage, createSpace, util;

util = require('util');

clc = require('cli-color');

commandsDesc = {
  deploy: 'Deploy static files to git server, like github.',
  server: 'Start a server on http://localhost:3000 .',
  build: 'Generate the static files.',
  post: 'Create post.',
  page: 'Create page.',
  "new": 'Init the blog directory.',
  help: 'Display help.'
};

commandsUsage = {
  deploy: '',
  server: 'Start a server on http://localhost:3000 .',
  build: '[-q] [blog directory]\n\n[-q]                 Use quiet mod, do not print log.\n[blog directory]     If not set directory then use current directory.',
  post: '[-f] <postname>\n\n<postname> Post name also file name, can\'t be \'index\'\n-f         Force to rewrite exist file.',
  page: '[-f] <pagename>\n\n-f     Force to rewrite exist file.',
  "new": '[blog directory]\n\n[blog directory]     If not set directory then use current directory.'
};

createSpace = function(command, maxLength) {
  var i, spaceLength, str;

  spaceLength = maxLength - command.length;
  str = '';
  i = 0;
  while (spaceLength > i) {
    str += ' ';
    i++;
  }
  return str;
};

module.exports = {
  help: function() {
    var command, description, maxLength;

    util.puts(require('../package.json').name + ' is ' + require('../package.json').description);
    util.puts('');
    maxLength = 1;
    for (command in commandsDesc) {
      if (command.length > maxLength) {
        maxLength = command.length;
      }
    }
    maxLength += 5;
    for (command in commandsDesc) {
      description = commandsDesc[command];
      util.print('   ' + clc.yellow(command) + createSpace(command, maxLength));
      util.puts(description);
    }
    return util.puts('');
  },
  puts: function(commandName) {
    return util.puts('Usage: 4press ' + commandName + ' ' + commandsUsage[commandName]);
  }
};
